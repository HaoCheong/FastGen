
<<SCHEMA_BASE>>
from typing import List, Union, Optional
from pydantic import BaseModel
from datetime import datetime

{{ SCHEMAS }}

{{ SELF_CLASS_STD }}Base.update_forward_refs()


########## OTHER SCHEMAS RELATED ##########

<<BASE_SCHEMA_CLASS>>
class {{ SELF_CLASS_STD }}Base(BaseModel):
    
    {{ SCHEMA_TYPES }}

    class Config:
        orm_mode = True

{{ SCHEMAS }}


<<CREATE_SCHEMA_CLASS>>
class {{ SELF_CLASS_STD }}Create({{ SELF_CLASS_STD }}Base):
    pass

{{ SCHEMAS }}


<<READ_NR_SCHEMA_CLASS>>
class {{ SELF_CLASS_STD }}ReadNR({{ SELF_CLASS_STD }}Base):
    id: int

{{ SCHEMAS }}


<<SCHEMAS_STRING>>
{{ COLUMN_NAME }}: str
    {{ SCHEMA_TYPES }}


<<SCHEMAS_INTEGER>>
{{ COLUMN_NAME }}: int
    {{ SCHEMA_TYPES }}


<<SCHEMAS_JSON>>
{{ COLUMN_NAME }}: { TO_ADD }
    {{ SCHEMA_TYPES }}


<<SCHEMAS_DATETIME>>
{{ COLUMN_NAME }}: datetime
    {{ SCHEMA_TYPES }}


########## READ WR SCHEMAS RELATED ##########

<<READ_WR_SCHEMA_CLASS>>
class {{ SELF_CLASS_STD }}ReadWR({{ SELF_CLASS_STD }}ReadNR):
    {{ WR_IMPORTS }}
    {{ WR_SCHEMAS }}
    pass

{{ SCHEMAS }}


<<WR_IMPORT>>
from app.schemas.{{ OTHER_CLASS_CC }}_schemas import {{ OTHER_CLASS_STD }}ReadNR
    {{ WR_IMPORTS }}


<<WR_SCHEMA_UNION>>
{{ OTHER_CLASS_CC }}: Union[{{ OTHER_CLASS_STD }}ReadNR, None]
    {{ WR_SCHEMAS }}


<<WR_SCHEMA_LIST>>
{{ OTHER_CLASS_CC }}: List[{{ OTHER_CLASS_STD }}ReadNR]
    {{ WR_SCHEMAS }}


########## UPDATE SCHEMAS RELATED ##########

<<UPDATE_SCHEMA_CLASS>>
class {{ SELF_CLASS_STD }}Update({{ SELF_CLASS_STD }}Base):
    
    {{ SCHEMAS_UPDATE }}
    pass

{{ SCHEMAS }}


<<UPDATE_SCHEMA_STRING>>
{{ SCHEMA_NAME }}: Optional[str] = None
    {{ SCHEMAS_UPDATE }}


<<UPDATE_SCHEMA_INTEGER>>
{{ SCHEMA_NAME }}: Optional[int] = None
    {{ SCHEMAS_UPDATE }}


<<UPDATE_SCHEMA_JSON>>
{{ SCHEMA_NAME }}: Optional[{ TO_ADD }] = None
    {{ SCHEMAS_UPDATE }}


<<UPDATE_SCHEMA_DATETIME>>
{{ SCHEMA_NAME }}: Optional[datetime] = None
    {{ SCHEMAS_UPDATE }}

